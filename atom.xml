<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ICARUS</title>
  
  
  <link href="http://lucylcarus.github.io/atom.xml" rel="self"/>
  
  <link href="http://lucylcarus.github.io/"/>
  <updated>2024-10-10T08:39:26.078Z</updated>
  <id>http://lucylcarus.github.io/</id>
  
  <author>
    <name>ICARUS</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL语法使用(一)</title>
    <link href="http://lucylcarus.github.io/posts/ed03a884.html"/>
    <id>http://lucylcarus.github.io/posts/ed03a884.html</id>
    <published>2024-09-16T08:27:09.000Z</published>
    <updated>2024-10-10T08:39:26.078Z</updated>
    
    <content type="html"><![CDATA[<p>写在最前面：MySQL对字母大小写不敏感，因此<strong>不必在意大小写</strong></p><h1 id="数据库管理"><a href="#数据库管理" class="headerlink" title="数据库管理"></a>数据库管理</h1><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>在 MySQL 中，可以使用 CREATE DATABASE 语句创建数据库，语法格式如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//通常情况下只写第一句即可</span><br><span class="line">CREATE DATABASE [IF NOT EXISTS] db_name</span><br><span class="line">[[DEFAULT] CHARACTER SET &lt;字符集名&gt;] </span><br><span class="line">[[DEFAULT] COLLATE &lt;校对规则名&gt;];</span><br></pre></td></tr></table></figure></p><p><code>[ ]</code>中的内容是可选的。语法说明如下：</p><p><code>db_name</code>创建数据库的名称。MySQL 的数据存储区将以目录方式表示 MySQL 数据库，因此数据库名称必须符合操作系统的文件夹命名规则，不能以数字开头，尽量要有实际意义。</p><p><code>IF NOT EXISTS</code>在创建数据库之前进行判断，只有该数据库目前尚不存在时才能执行操作。此选项可以用来避免数据库已经存在而重复创建的错误。</p><p><code>[DEFAULT] CHARACTER SET</code>指定数据库的字符集。指定字符集的目的是为了避免在数据库中存储的数据出现乱码的情况。如果在创建数据库时不指定字符集，那么就使用系统的默认字符集。</p><p><code>[DEFAULT] COLLATE</code>指定字符集的默认校对规则。</p><blockquote><p>例：创建名为test的数据库<br>CREATE DATABASE test;</p></blockquote><h2 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW CREATE DATABASE db_name;</span><br></pre></td></tr></table></figure><blockquote><p>例：查看名为test的数据库<br>SHOW CREATE DATABASE test;</p></blockquote><h2 id="修改数据库"><a href="#修改数据库" class="headerlink" title="修改数据库"></a>修改数据库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ALTER DATABASE|SCHEMA db_name</span><br><span class="line">[DEFAULT] CHARACTER SET charset_name</span><br><span class="line">[DEFAULT] COLLATE collation_name;</span><br></pre></td></tr></table></figure><blockquote><p>例：修改名为test的数据库<br>ALTER DATABASE test<br>DEFAULT CHARACTER SET gbk<br>DEFAULT COLLATE gbk_chinese_ci;</p></blockquote><h2 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE [IF EXISTS] db_name;</span><br></pre></td></tr></table></figure><blockquote><p>例：删除名为test的数据库<br>DROP DATABASE test;</p></blockquote><h1 id="数据库表的管理"><a href="#数据库表的管理" class="headerlink" title="数据库表的管理"></a>数据库表的管理</h1><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE [TEMPORARY] TABLE [IF NOT EXIST] &lt;表名&gt;</span><br><span class="line">[([&lt;字段定义&gt;],……,|[&lt;索引定义&gt;])]</span><br><span class="line">[table_option] [selsct_statement];</span><br></pre></td></tr></table></figure><p><code>TEMPORARY</code> 若使用该关键字，则创建的是临时表</p><p><code>IF NOT EXIST</code> 用于判断数据库中是否已经存在同名的表。若不存在，则执行<code>CREATE TABLE</code>操作。若数据库中已存在同名表，创建数据表时会出错，为避免此种情况，可使用<code>IF NOT EXIST</code>进行判断</p><p><code>&lt;表名&gt;</code> 要创建的表名，最多可有64个字符，不允许重名，不能使用SQL中的关键字</p><p><code>&lt;字段定义&gt;</code> 的书写格式如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;字段名&gt; &lt;数据类型&gt; [DEFAULT] [AUTO_INCREMENT] [COMMENT &#x27;String&#x27;] [&#123;&lt;列约束&gt;&#125;]</span><br></pre></td></tr></table></figure><p><code>DEFAULT</code> 若某字段设置有默认值，则当该字段未被输入数据时，自动填充设置的默认值</p><p><code>AUTO_INCREMENT</code> 设置自增数值属性，只有整数型数据能够设置</p><p><code>COMMENT &#39;String&#39;</code> 注释字段名</p><p><code>&lt;列约束&gt;</code> 列约束是对某一个特定字段的约束，包含在字段定义中，直接跟在该字段的其他定义之后，用空格分隔，不必指定字段名</p><p><code>&lt;索引定义&gt;</code> 为表中相关字段指定索引</p><p><code>table_option</code> 表选项，存储引擎，字符集等</p><p><code>selsct_statement</code> 定义表的查询语句</p><blockquote><p>例：创建名为students的数据表并添加基本属性<br>CREATE TABLE “students” (<br>“sno” CHAR(10) NOT NULL COMMENT “学号”,<br>“sname” VARCHAR(45) NOT NULL COMMENT “姓名”,<br>“sex” ENUM(“男”,”女”) NOT NULL DEFAULT “男” COMMENT “性别”,<br>“age” INT NOT NULL COMMENT “年龄”,<br>“major” VARCHAR(45) NOT NULL COMMENT “专业”,<br>“department” VARCHAR(45) NOT NULL COMMENT “院系”,<br>PRIMARY KEY (“sno”)  //主码约束<br>)</p></blockquote><p>定义表的约束：</p><ol><li>非空约束(NULL/NOT NULL)</li><li>唯一约束(UNIQUE)</li><li>主码约束(PRIMARY KEY)</li><li>外码约束(FOREIGN KEY)</li><li>检查约束(CHECK) </li></ol><h2 id="修改表的数据"><a href="#修改表的数据" class="headerlink" title="修改表的数据"></a>修改表的数据</h2><h3 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE &lt;表名&gt;</span><br><span class="line">ADD [&lt;新字段名&gt; &lt;数据类型&gt;]</span><br><span class="line">[&lt;完整性约束定义&gt;] [FIRST|AFTER已有字段名]</span><br></pre></td></tr></table></figure><blockquote><p>例：在students数据表中添加学生班级属性<br>ALTER TABLE students<br>ADD class VARCHAR(6);</p></blockquote><h3 id="重命名表名"><a href="#重命名表名" class="headerlink" title="重命名表名"></a>重命名表名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE &lt;数据表名&gt;</span><br><span class="line">RENAME [TO] &lt;新表名&gt;</span><br></pre></td></tr></table></figure><blockquote><p>例：将students数据表重命名为student<br>ALTER TABLE students<br>RENAME student</p></blockquote><h3 id="修改表头"><a href="#修改表头" class="headerlink" title="修改表头"></a>修改表头</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE &lt;数据表名&gt;</span><br><span class="line">CHANGE &lt;旧表头&gt; &lt;新表头&gt; &lt;新数据类型&gt;</span><br><span class="line">//注：即使不需要修改数据类型也要加上新数据类型，保持一致即可</span><br></pre></td></tr></table></figure><blockquote><p>例：将student数据表中的sname修改为sn<br>ALTER TABLE student<br>CHANFE sname sn VARCHAR(45);</p></blockquote><h3 id="修改表头数据类型和字段排序"><a href="#修改表头数据类型和字段排序" class="headerlink" title="修改表头数据类型和字段排序"></a>修改表头数据类型和字段排序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE &lt;数据表名&gt;</span><br><span class="line">MODIFY &lt;表头1&gt; &lt;数据类型&gt; [FIRST|AFTER 表头2];</span><br><span class="line">//注：数据类型不可省略</span><br></pre></td></tr></table></figure><blockquote><p>例：将student数据表中sn的数据类型修改为CHAR(30)<br>ALTER TABLE student<br>MODIFY sn CHAR(30);</p><p>例：将student数据表中年龄age插到性别sex之前<br>ALTER TABLE student<br>MODIFY sex ENUM(“男”,”女”) AFTER age;</p></blockquote><h3 id="修改数据表存储引擎"><a href="#修改数据表存储引擎" class="headerlink" title="修改数据表存储引擎"></a>修改数据表存储引擎</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE &lt;表名&gt;</span><br><span class="line">ENGINE=&lt;修改后的存储引擎&gt;;</span><br></pre></td></tr></table></figure><blockquote><p>例:将存储引擎切换为MyISAM<br>ALTER TABLE student<br>ENGINE=MyISAM;</p></blockquote><h3 id="删除表头和完整性约束"><a href="#删除表头和完整性约束" class="headerlink" title="删除表头和完整性约束"></a>删除表头和完整性约束</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE &lt;旧表名&gt;</span><br><span class="line">DROP &lt;表头&gt;;</span><br></pre></td></tr></table></figure><blockquote><p>例:删除student数据表中class班级属性<br>ALTER TABLE students<br>DROP class;</p></blockquote><h2 id="删除数据表"><a href="#删除数据表" class="headerlink" title="删除数据表"></a>删除数据表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE [IF EXISTS] &lt;表名&gt;;</span><br></pre></td></tr></table></figure><blockquote><p>例:删除student数据表<br>DROP TABLE student;</p></blockquote>]]></content>
    
    
    <summary type="html">MySQL是一个关系型数据库管理系统,是最流行的关系型数据库管理系统之一，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。MySQL所使用的 SQL 语言是用于访问数据库的最常用标准化语言。MySQL 软件采用了双授权政策，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型和大型网站的开发都选择 MySQL作为网站数据库。</summary>
    
    
    
    <category term="使用教程" scheme="http://lucylcarus.github.io/categories/%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="http://lucylcarus.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown语法使用</title>
    <link href="http://lucylcarus.github.io/posts/308ecbbe.html"/>
    <id>http://lucylcarus.github.io/posts/308ecbbe.html</id>
    <published>2024-09-14T08:27:09.000Z</published>
    <updated>2024-10-10T04:02:25.209Z</updated>
    
    <content type="html"><![CDATA[<h1 id="标题语法"><a href="#标题语法" class="headerlink" title="标题语法"></a>标题语法</h1><p>使用井号# 表示标题，井号# 的个数代表标题级数</p><blockquote><p>例：</p><pre><code># 一级标题 ## 二级标题 ### 三级标题</code></pre></blockquote><h1 id="段落语法"><a href="#段落语法" class="headerlink" title="段落语法"></a>段落语法</h1><ol><li><p>结尾添加一个空格换行<br>第二行</p></li><li><p>使用<code>&lt;br&gt;</code>标签换行<br></p></li><li><p>中间空一行切换段落</p></li></ol><h1 id="字体设置"><a href="#字体设置" class="headerlink" title="字体设置"></a>字体设置</h1><ol><li><p>使用一个星号*变为<em>斜体</em></p></li><li><p>使用两个星号**加粗<strong>字体</strong></p></li><li><p>使用三个星号***变为<strong><em>斜体+粗体</em></strong></p></li><li><p>使用两个波浪线~~表示<del>删除线</del></p></li></ol><h1 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h1><p>使用一个&gt;表示引用块</p><blockquote><p>引用块</p></blockquote><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><p>代码前后使用三个反单引号```表示代码块(英文下的~)<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code</span><br></pre></td></tr></table></figure></p><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><p>使用三个短横线—-表示分割线</p><hr><h1 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h1><p>使用数字加点表示有序列表(可嵌套)</p><ol><li>1</li><li>2</li><li>3<ol><li>3-1</li><li>3-2</li></ol></li><li>4</li></ol><h1 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h1><p>使用一个短横线表示无序列表(可嵌套)</p><ul><li>1</li><li>2</li><li>3<ul><li>3-1</li><li>3-2</li></ul></li><li>4</li></ul><h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><p>使用方括号[ ]表示显示的内容，其后接圆括号( )并在其中输入网址，此外还可以添加一段文字以供悬停查看</p><blockquote><p>例：<br> 这是一个链接 <a href="https://markdown.com.cn" title="最好的markdown教程">Markdown语法</a>。</p></blockquote><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>使用感叹号！方括号[ ]和圆括号( )实现图片输出，方括号[ ]内可写入文字，圆括号( )内写入文件路径<br><img src="https://img.picui.cn/free/2024/09/18/66ea8743bfa09.png" alt="这是一张图片"></p><h1 id="表示为代码"><a href="#表示为代码" class="headerlink" title="表示为代码"></a>表示为代码</h1><p>使用一对反单引号``表示为代码</p><blockquote><p>例：<br> 这是代码<code>npm</code></p></blockquote>]]></content>
    
    
    <summary type="html">Markdown 是一种轻量级的标记语言，可用于在纯文本文档中添加格式化元素。它使用易读易写的纯文本格式编写文档，可与HTML混编，可导出 HTML、PDF 以及本身的 .md 格式的文件。因简洁、高效、易读、易写，Markdown被大量用于如Github、Wikipedia、简书等平台。</summary>
    
    
    
    <category term="使用教程" scheme="http://lucylcarus.github.io/categories/%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="MarkDown" scheme="http://lucylcarus.github.io/tags/MarkDown/"/>
    
  </entry>
  
</feed>
